<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Type_user extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Type_user_model');
    } 

    /*
     * Listing of type_user
     */
    function index()
    {
        $data['type_user'] = $this->Type_user_model->get_all_type_user();
        
        $data['_view'] = 'type_user/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new type_user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nameTypeUser','NameTypeUser','required|max_length[250]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nameTypeUser' => $this->input->post('nameTypeUser'),
            );
            
            $type_user_id = $this->Type_user_model->add_type_user($params);
            redirect('type_user/index');
        }
        else
        {            
            $data['_view'] = 'type_user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a type_user
     */
    function edit($userTypeID)
    {   
        // check if the type_user exists before trying to edit it
        $data['type_user'] = $this->Type_user_model->get_type_user($userTypeID);
        
        if(isset($data['type_user']['userTypeID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nameTypeUser','NameTypeUser','required|max_length[250]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nameTypeUser' => $this->input->post('nameTypeUser'),
                );

                $this->Type_user_model->update_type_user($userTypeID,$params);            
                redirect('type_user/index');
            }
            else
            {
                $data['_view'] = 'type_user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The type_user you are trying to edit does not exist.');
    } 

    /*
     * Deleting type_user
     */
    function remove($userTypeID)
    {
        $type_user = $this->Type_user_model->get_type_user($userTypeID);

        // check if the type_user exists before trying to delete it
        if(isset($type_user['userTypeID']))
        {
            $this->Type_user_model->delete_type_user($userTypeID);
            redirect('type_user/index');
        }
        else
            show_error('The type_user you are trying to delete does not exist.');
    }
    
}
