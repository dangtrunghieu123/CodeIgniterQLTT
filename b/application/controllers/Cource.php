<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Cource extends MY_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Cource_model');
        $this->load->model('User_model');
        $this->load->model('Clas_model');
        $this->load->model('Detail_lc_model');
        $_SESSION['navi'] = 'course';
    } 

    /*
     * Listing of cource
     */
    function index()
    {
        $data['cource'] = $this->Cource_model->get_all_cource();
        
        $data['_view'] = 'cource/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new cource
     */
    function add()
    {   
        
        $this->load->library('form_validation');
		$this->form_validation->set_rules('nameCourse','NameCourse','required|max_length[250]');
		$this->form_validation->set_rules('price','Price','required|integer');
		$this->form_validation->set_rules('author','Author','required|max_length[150]');
		$this->form_validation->set_rules('image','Image','required');
		
		if($this->form_validation->run())     
        {   
            if(isset($_POST) && count($_POST) > 0)  {
                $params = array(
                    'nameCourse' => $this->input->post('nameCourse'),
                    'price' => $this->input->post('price'),
                    'author' => $this->input->post('author'),
                    'image' => $this->input->post('image'),
                    'description' => $this->input->post('description'),
                );
                print_r( $params);
                $cource_id = $this->Cource_model->add_cource($params);
                redirect('cource/index');
            }
            else
            {      
                $data['author'] = $this->User_model->get_user_by_authorAD();
                $data['_view'] = 'cource/add';
                $this->load->view('layouts/main',$data);
            }
        }
        else
        {      
            $data['author'] = $this->User_model->get_user_by_authorAD();
            $data['_view'] = 'cource/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a cource
     */
    function edit($courseID)
    {   
        // check if the cource exists before trying to edit it
        $data['cource'] = $this->Cource_model->get_cource($courseID);
        
        if(isset($data['cource']['courseID']))
        {
            $this->load->library('form_validation');
			$this->form_validation->set_rules('nameCourse','NameCourse','required|max_length[250]');
			$this->form_validation->set_rules('price','Price','required|integer');
			$this->form_validation->set_rules('author','Author','required|max_length[150]');
			$this->form_validation->set_rules('image','Image','required');
		
			if($this->form_validation->run())     
            {   
                if(isset($_POST) && count($_POST) > 0)  {
                    $params = array(
                        'nameCourse' => $this->input->post('nameCourse'),
                        'price' => $this->input->post('price'),
                        'author' => $this->input->post('author'),
                        'image' => $this->input->post('image'),
                        'description' => $this->input->post('description'),
                    );
                    var_dump($params);
                    $this->Cource_model->update_cource($courseID,$params);            
                    redirect('cource/index');
                }
                else
                {
                    
                    $data['author'] = $this->User_model->get_user_by_authorAD();
                    $data['_view'] = 'cource/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
            {
                $data['author'] = $this->User_model->get_user_by_authorAD();
                $data['_view'] = 'cource/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The cource you are trying to edit does not exist.');
    } 

    /*
     * Deleting cource
     */
    function remove()
    {

        try{
            $courseID = $this->input->post('id');
            $cource = $this->Cource_model->get_cource($courseID);
            // print_r($cource);
            if(isset($cource['courseID']))
            {
                $class = $this->Clas_model->get_clas_by_courseID($cource['courseID']);
                // print_r($class);
                $detail_lc = $this->Detail_lc_model->get_detail_lc_by_courseID($cource['courseID']);
                if($class != null){
                    throw new Exception("Vui lòng xóa các lớp học liên quan!");
                }
                
                else if( $detail_lc != null){
                    throw new Exception("Vui lòng xóa các bài học của khóa học này");
                }
                $this->Cource_model->delete_cource($cource['courseID']);
                return $this->Success(array(
                    'message' => 'Xóa thành công!'
                ));
                redirect('cource/index');
            }
        
            throw new Exception("Xóa không thành công");
        }
        catch(Exception $e){
            return $this->Success(array(
                'isSuccess' => false,
                'message' => $e->getMessage()
            ));
        }

      

        
    }

    // detail

    function detail_course($courseID){
        // print_r($courseID);
        $course = $this->Cource_model->get_cource($courseID);
        if(isset($course['courseID']))
        {
            $data['_course'] = $course;
        }
        else
            show_error('The course you are trying to delete does not exist.');
        $this->load->view('detail_course',$data);
    }
    
    function viewLess($courseID){
        $data['name'] = $this->Cource_model->get_cource($courseID);
        $data['lesson'] = $this->Detail_lc_model->get_detail_lc_by_courseID($courseID);
        $data['_view'] = 'detail_lc/index';
        $this->load->view('layouts/main',$data);
    }

    //remove lesson
    function removeLesson(){
        try{
            $id = $this->input->post('id');
            $detail_lc = $this->Detail_lc_model->get_detail_lc($id);
            if(isset( $detail_lc['id'])){
                $this->Detail_lc_model->delete_detail_lc($id);
                return $this->Success(array(
                    'message' => 'Xóa thành công!'
                ));
                redirect('detail_lc/index');
            }
            throw new Exception("Xóa không thành công");
        }
        catch(Exception $e){
            return $this->Success(array(
                'isSuccess' => false,
                'message' => $e->getMessage()
            ));
        }
    }

   
}
